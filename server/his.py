# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'his.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from datetime import datetime
import os
from PyQt5 import QtCore, QtGui, QtWidgets
class ClickableLabel(QtWidgets.QLabel):
    #定义可点击label
    datetime_signal = QtCore.pyqtSignal(datetime)  # 定义信号，传递datetime对象

    def __init__(self, parent=None):
        super(ClickableLabel, self).__init__(parent)
        self._image_path = None
    def mousePressEvent(self, event):
        # 当 QLabel 被点击时，这个方法会被调用
        try:
            
            image_path = self.image_path
            filename = os.path.basename(image_path)

            # 去除文件扩展名，这里假设文件名是时间戳
            timestamp_str, _ = os.path.splitext(filename)

            # 将字符串转换为时间戳（假设时间戳是以秒为单位的）
            timestamp = int(timestamp_str)

            # 将时间戳转换为datetime对象
            datetime_obj = datetime.fromtimestamp(timestamp)
            self.datetime_signal.emit(datetime_obj)
            

        except Exception as e:
            print(e)
    @property
    def image_path(self):
        return self._image_path

    @image_path.setter
    def image_path(self, path):
        self._image_path = path
        



class Ui_his(object):
    def setupUi(self, his):
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(his.sizePolicy().hasHeightForWidth())
        his.setSizePolicy(sizePolicy)
        his.setObjectName("his")
        his.setEnabled(True)
        his.resize(780, 700)
        his.setMinimumSize(QtCore.QSize(750, 600))
        his.setMaximumSize(QtCore.QSize(1500, 1500))
        his.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        his.setStyleSheet("background-image: url(./assert/test21.png);")
        self.verticalLayout = QtWidgets.QVBoxLayout(his)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 15, -1, 15)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.dropdown_menu = QtWidgets.QComboBox(his)
        self.dropdown_menu.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dropdown_menu.sizePolicy().hasHeightForWidth())
        self.dropdown_menu.setSizePolicy(sizePolicy)
        self.dropdown_menu.setObjectName("dropdown_menu")
        self.horizontalLayout.addWidget(self.dropdown_menu)
        self.photo_path = QtWidgets.QLineEdit(his)
        self.photo_path.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.photo_path.sizePolicy().hasHeightForWidth())
        self.photo_path.setSizePolicy(sizePolicy)
        self.photo_path.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.photo_path.setStyleSheet("background-image: url(./assert/2.jpg);")
        self.photo_path.setObjectName("photo_path")
        self.horizontalLayout.addWidget(self.photo_path)
        self.up_pushbutton = QtWidgets.QPushButton(his)
        self.up_pushbutton.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.up_pushbutton.sizePolicy().hasHeightForWidth())
        self.up_pushbutton.setSizePolicy(sizePolicy)
        self.up_pushbutton.setObjectName("up_pushbutton")
        self.up_pushbutton.setStyleSheet("background-image: url(./assert/2.jpg);")
        self.horizontalLayout.addWidget(self.up_pushbutton)
        self.dn_pushbutton = QtWidgets.QPushButton(his)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dn_pushbutton.sizePolicy().hasHeightForWidth())
        self.dn_pushbutton.setSizePolicy(sizePolicy)
        self.dn_pushbutton.setObjectName("dn_pushbutton")
        self.dn_pushbutton.setStyleSheet("background-image: url(./assert/2.jpg);")
        self.horizontalLayout.addWidget(self.dn_pushbutton)
        self.comboBox = QtWidgets.QComboBox(his)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.setStyleSheet("background-image: url(./assert/2.jpg);")
        self.horizontalLayout.addWidget(self.comboBox)
        self.delete_pushbutton = QtWidgets.QPushButton(his)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.delete_pushbutton.sizePolicy().hasHeightForWidth())
        self.delete_pushbutton.setSizePolicy(sizePolicy)
        self.delete_pushbutton.setObjectName("delete_pushbutton")
        self.delete_pushbutton.setStyleSheet("background-image: url(./assert/灰2.png);")
        self.horizontalLayout.addWidget(self.delete_pushbutton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.photo_1 = ClickableLabel(his)
        self.photo_1.setStyleSheet("background-image: url(sdfdjhfsjf);"
                                   )
        self.photo_1.setText("")
        self.photo_1.setObjectName("photo_1")
        self.photo_1.datetime_signal.connect(his.updatePhotoPath) # type: ignore
        self.gridLayout.addWidget(self.photo_1, 0, 0, 1, 1)
        self.photo_2 = ClickableLabel(his)
        # self.photo_2.setEnabled(False)
        self.photo_2.setStyleSheet("background-image: url(sdfdjhfsjf);")
        self.photo_2.setText("")
        self.photo_2.setObjectName("photo_2")
        self.photo_2.datetime_signal.connect(his.updatePhotoPath)
        self.gridLayout.addWidget(self.photo_2, 0, 1, 1, 1)
        self.photo_3 = ClickableLabel(his)
        self.photo_3.setStyleSheet("background-image: url(sdfdjhfsjf);")
        self.photo_3.setText("")
        self.photo_3.setObjectName("photo_3")
        self.photo_3.datetime_signal.connect(his.updatePhotoPath)
        self.gridLayout.addWidget(self.photo_3, 1, 0, 1, 1)
        self.photo_4 = ClickableLabel(his)
        self.photo_4.setStyleSheet("background-image: url(sdfdjhfsjf);")
        self.photo_4.setText("")
        self.photo_4.setObjectName("photo_4")
        self.photo_4.datetime_signal.connect(his.updatePhotoPath)
        self.gridLayout.addWidget(self.photo_4, 1, 1, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 9)

        self.retranslateUi(his)
        self.dn_pushbutton.clicked.connect(his.pgdn_pushbutton) # type: ignore
        self.up_pushbutton.clicked.connect(his.pgup_pushbutton) # type: ignore
        self.dropdown_menu.currentIndexChanged['int'].connect(his.on_dropdown_menu_changed) # type: ignore
        self.comboBox.currentIndexChanged['int'].connect(his.delete_dropdown_menu_changed) # type: ignore
        self.delete_pushbutton.clicked.connect(his.delete_history_screenshots) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(his)

    def retranslateUi(self, his):
        _translate = QtCore.QCoreApplication.translate
        his.setWindowTitle(_translate("his", "历史图像"))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./assert/icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        his.setWindowIcon(icon)
        self.up_pushbutton.setText(_translate("his", "↑"))
        self.dn_pushbutton.setText(_translate("his", "↓"))
        self.delete_pushbutton.setText(_translate("his", "Delete"))
    def updatePhotoPath(self, datetime_obj):
        self.photo_path.setText("")
        # if datetime_obj is not None:
        self.photo_path.setText(datetime_obj.strftime("%Y-%m-%d %H:%M:%S"))

    def paintEvent(self, a0: QtGui.QPaintEvent) -> None:
        opt = QtWidgets.QStyleOption()
        opt.initFrom(self)
        painter = QtGui.QPainter(self)
        # painter.setRenderHint(QtGui.QPainter.Antialiasing) # 反锯齿
        self.style().drawPrimitive(QtWidgets.QStyle.PE_Widget, opt, painter, self)